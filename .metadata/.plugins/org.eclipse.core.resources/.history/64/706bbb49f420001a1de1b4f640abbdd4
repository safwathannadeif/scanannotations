package com.scan.annotate;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.FileSystemNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.annotaion.AWebSocket;
import com.scan.annotate.logging.LoggerRef;

public class MainTest {
	public static void main(String[] args) throws IOException, ClassNotFoundException  {
		AnnottedClazsFrmPkgs anntClazFrmInResAndPkg = new AnnottedClazsFrmPkgs() ;
		anntClazFrmInResAndPkg.lisClassPath() ;
		//List<String> inputPKGs = Arrays.asList("com.xxx") ; //, "org.glassfish.tyrus","org.glassfish" ) ;
		List<String> inputPKGs = Arrays.asList("com.shd.common1.json","com","com.xxx.yyy","com.shd", "com.google.gson","com.trytest", "com.google", "javax.websocket") ; //, "org.glassfish.tyrus","org.glassfish" ) ;
		List<PkgNameResourcesContent> sortedLisByStrFile =anntClazFrmInResAndPkg.pkgAndURISortedLis(inputPKGs) ;
		List<PkgNameResourcesContent> normalizedPkgAndURIsLis = 	new ArrayList<PkgNameResourcesContent>();
		normalizedPkgAndURIsLis = anntClazFrmInResAndPkg.removeDuplication(sortedLisByStrFile) ;
		LoggerRef.getDispLogger().info("\t\tStrat priFilterTracking") ;
		normalizedPkgAndURIsLis.get(0).priFilterTracking();
		LoggerRef.getDispLogger().info("\t\tEnd priFilterTracking") ;
		
		LoggerRef.getDispLogger().info("Start Scaning And Collect Annoted Classes " ) ;
		normalizedPkgAndURIsLis.forEach(item -> {
			LoggerRef.getDispLogger().info("Scan PKG/URI =["+item.getPkgName() +"] [" +  item.getUri() + "]") ;
			try {
				anntClazFrmInResAndPkg.collectAnnotedClassesPerPKgURI(item,AWebSocket.class) ;
			} catch (FileSystemNotFoundException | IOException | URISyntaxException | IllegalAccessException e) {
				e.printStackTrace();
				throw new RuntimeException(e); 
			} 
		}
				);
		LoggerRef.getDispLogger().info("End Scaning And Collect Annoted Classes " ) ;	
		Factory4ReqResp.printReqRespAnnoted();
	}

}
